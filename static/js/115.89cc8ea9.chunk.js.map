{"version":3,"file":"static/js/115.89cc8ea9.chunk.js","mappings":"4TAGAA,IAAAA,SAAAA,QAAyB,gCAEzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,QACVC,eAAe,GAGV,IAAMC,EAAiB,mCAAG,sGACRJ,IAAAA,IAAU,uBADF,uBACvBK,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHR,IAAAA,IAAA,8BAAiCQ,IAD9B,uBAClBH,EADkB,EAClBA,KADkB,kBAGnBA,EAAKC,SAHc,2CAAH,sDAMZG,EAAe,mCAAG,WAAMC,GAAN,yFACNV,IAAAA,IAAA,gBAAmBU,IADb,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfM,EAAe,mCAAG,WAAMD,GAAN,yFACNV,IAAAA,IAAA,gBAAmBU,EAAnB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKO,MAHiB,2CAAH,sDAMfC,EAAe,mCAAG,WAAMH,GAAN,yFACNV,IAAAA,IAAA,gBAAmBU,EAAnB,aADM,uBACrBL,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,uD,gJC/BfQ,EAAO,WAClB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEOR,EAAAA,EAAAA,IAAgBD,GAFvB,OAENE,EAFM,OAGZK,EAAQL,GAHI,gDAKZQ,QAAQC,MAAR,MALY,yDAAH,qDAQbF,MACC,CAACT,KAGF,0BACE,wBACGE,EAAKU,OAAS,EACbV,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACP,2BACE,sCAAcD,MACd,6CAAqBC,OAFdF,OAMX","sources":["Service/api-service.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '121fad3c6c9b7bc3d8e43ee646e86854';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('trending/movie/week');\n\n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n\n  return data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'Service/api-service';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const cast = await getMovieCredits(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast.length > 0 ? (\n          cast.map(({ id, name, character }) => (\n            <li key={id}>\n              <span>Actor: {name}</span>\n              <span> / Character: {character}</span>\n            </li>\n          ))\n        ) : (\n          <h2>Sorry, we dont have this information</h2>\n        )}\n      </ul>\n    </div>\n  );\n};\n"],"names":["axios","api_key","language","include_adult","getTrendingMovies","data","results","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","Cast","useParams","useState","setCast","useEffect","getCast","console","error","length","map","id","name","character"],"sourceRoot":""}